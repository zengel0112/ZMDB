{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React-Movie-App/src/components/DefaultList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefaultList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMovies();\n  }, []);\n  async function getMovies() {\n    try {\n      const response = await fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=f43ec82a5f24fe6190891894b7436c7a\", {\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        method: \"GET\"\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setMovies(data.results);\n      } else {\n        console.error(\"Failed to fetch movies.\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching movies:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieList\",\n    children: movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"movie-title\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-overview\",\n            children: [\"Plot : \", movie.overview]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-release-date\",\n            children: [\"Release Date: \", movie.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-rating\",\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DefaultList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = DefaultList;\nexport default DefaultList;\nvar _c;\n$RefreshReg$(_c, \"DefaultList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DefaultList","_s","movies","setMovies","getMovies","response","fetch","headers","method","ok","data","json","results","console","error","className","children","map","movie","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","overview","release_date","vote_average","id","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/GitHub/React-Movie-App/src/components/DefaultList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\n\nconst DefaultList = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  async function getMovies() {\n    try {\n      const response = await fetch(\n        \"https://api.themoviedb.org/3/discover/movie?api_key=f43ec82a5f24fe6190891894b7436c7a\",\n        {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          method: \"GET\",\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        setMovies(data.results);\n      } else {\n        console.error(\"Failed to fetch movies.\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching movies:\", error);\n    }\n  }\n\n  return (\n    <div className=\"MovieList\">\n      {movies.map((movie) => {\n        return (\n          <div className=\"movie\" key={movie.id}>\n            <div className=\"image-container\">\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n            </div>\n\n            <div className=\"movie-details\">\n              <h1 className=\"movie-title\">{movie.title}</h1>\n              <p className=\"movie-overview\">Plot : {movie.overview}</p>\n              <p className=\"movie-release-date\">\n                Release Date: {movie.release_date}\n              </p>\n              <p className=\"movie-rating\">Rating: {movie.vote_average}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DefaultList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}